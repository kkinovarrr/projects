import pandas as pd
import numpy as np
data_source = 'iris.data'
d = pd.read_table(data_source, delimiter=",", header = None)
d.head()
import pandas as pd
import numpy as np
data_source = 'iris.data'
d = pd.read_table(data_source, delimiter=",",
                  header = None,
                 names=['sepal_length','sepal_width',
                       'petal_length','petal_width','answer'])
d.head()
import seaborn as sb
%matplotlib inline
sb.pairplot(d)
import seaborn as sb
%matplotlib inline
sb.pairplot(d,hue='answer')
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
X_train = d[['sepal_length','sepal_width','petal_length','petal_width']]
y_train = d['answer']
K = 3
knn = KNeighborsClassifier(n_neighbors=K)
knn.fit(X_train,y_train)
X_test = np.array([[1.2, 1.0, 2.8, 1.2]])
target = knn.predict(X_test)
print(target)
from sklearn.model_selection import train_test_split
X_train, X_holdout, y_train, y_holdout = \
train_test_split(d[['sepal_length','sepal_width',
                    'petal_length','petal_width']],
                d['answer'],
                test_size=0.3,
                random_state=17)
knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(X_train,y_train)
knn_pred = knn.predict(X_holdout)
accur = accuracy_score(y_holdout, knn_pred)
print('accuracy: ', accur)
from sklearn.model_selection import cross_val_score
import matplotlib.pyplot as plt
k_list = list(range(1,50))
cv_scores = []
for K in k_list:
    knn = KNeighborsClassifier(n_neighbors=K)
    scores = cross_val_score(knn, d.iloc[  :  , 0:4 ], d['answer'], cv=10, scoring='accuracy')
    cv_scores.append(scores.mean())
MSE = [1-x for x in cv_scores]
plt.plot(k_list, MSE)
plt.xlabel('Количество соседей(К)')
plt.ylabel('Ошибка классификации (MSE)')
plt.show()
k_min = min(MSE)
all_k_min = []
for i in range(len(MSE)):
  if MSE[i]<=k_min:
    all_k_min.append(k_list[i])
print('Оптимальные значения К: ', all_k_min) 
